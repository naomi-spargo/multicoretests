;; Negative tests to confirm that approach works

;; this prevents the tests from running on a default build
(alias
 (name default)
 (package multicoretests)
 (deps
   ref_test.exe
   conclist_test.exe
   domain_lin_tests.exe
   thread_lin_tests.exe
   effect_lin_tests.exe))

(executable
 (name ref_test)
 (modules ref_test)
 (libraries qcheck STM)
 (preprocess (pps ppx_deriving.show ppx_deriving.eq)))

(rule
 (alias runtest)
 (package multicoretests)
 (deps ref_test.exe)
 (action (run ./%{deps} --no-colors --verbose)))

(library
 (name CList)
 (modules CList))

(executable
 (name conclist_test)
 (modules conclist_test)
 (libraries CList qcheck STM)
 (preprocess (pps ppx_deriving.show ppx_deriving.eq)))

(rule
 (alias runtest)
 (package multicoretests)
 (deps conclist_test.exe)
 (action (run ./%{deps} --no-colors --verbose)))


;; Linearizability tests of ref and Clist

(library
 (name lin_tests_common)
 (modules lin_tests_common)
 (libraries qcheck lin CList)
 (preprocess (pps ppx_deriving_qcheck ppx_deriving.show ppx_deriving.eq)))

(executables
 (names domain_lin_tests thread_lin_tests)
 (modules domain_lin_tests thread_lin_tests)
 (flags (:standard -w -27))
 (libraries lin_tests_common))

(executable
 (name effect_lin_tests)
 (modules effect_lin_tests)
 (flags (:standard -w -27))
 (libraries lin_tests_common)
 (preprocess (pps ppx_deriving_qcheck ppx_deriving.show ppx_deriving.eq)))

(rule
 (alias runtest)
 (package multicoretests)
 (deps domain_lin_tests.exe)
 (action (run ./%{deps} --no-colors --verbose)))

(rule
 (alias runtest)
 (package multicoretests)
 (deps thread_lin_tests.exe)
 (action (run ./%{deps} --no-colors --verbose)))

(rule
 (alias runtest)
 (package multicoretests)
 (deps effect_lin_tests.exe)
 (action (run ./%{deps} --no-colors --verbose)))
